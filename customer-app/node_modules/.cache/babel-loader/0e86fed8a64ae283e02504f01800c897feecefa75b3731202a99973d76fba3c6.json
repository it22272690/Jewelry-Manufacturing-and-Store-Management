{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\AppData\\\\Roaming\\\\Jewelry-Manufacturing-and-Store-Management\\\\customer-app\\\\src\\\\components\\\\Header\\\\index.js\",\n  _s = $RefreshSig$();\n// index.js\nimport React, { useState } from 'react';\nimport './style.css';\nimport { useDispatch } from 'react-redux';\nimport { login } from '../../actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Header = () => {\n  _s();\n  const [selectedLoginType, setSelectedLoginType] = useState(null);\n  const [showLoginForm, setShowLoginForm] = useState(false);\n  const dispatch = useDispatch();\n  const handleLoginButtonClick = () => {\n    setShowLoginForm(true);\n  };\n  const handleLoginTypeChange = loginType => {\n    setSelectedLoginType(loginType);\n    setShowLoginForm(false); // Close the login form\n    if (loginType === 'admin') {\n      // Redirect user to admin page running on port 4000\n      window.location.href = 'http://localhost:4000/signin';\n    }\n  };\n  const userLogin = () => {\n    // Retrieve email and password values from the input fields\n    const email = document.getElementById('email').value;\n    const password = document.getElementById('password').value;\n\n    // Dispatch login action with email and password\n    dispatch(login({\n      email,\n      password\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"headerBar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"loginButton\",\n          onClick: handleLoginButtonClick,\n          children: selectedLoginType ? selectedLoginType === 'customer' ? 'Customer Login' : 'Admin Login' : 'Login'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), showLoginForm && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleLoginTypeChange('customer'),\n            children: \"Customer Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleLoginTypeChange('admin'),\n            children: \"Admin Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), showLoginForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loginFormContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loginForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          placeholder: \"email\",\n          className: \"inputField\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          placeholder: \"Password\",\n          className: \"inputField\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), selectedLoginType === 'customer' ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"loginSubmitButton\",\n          onClick: userLogin,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"loginSubmitButton\",\n          onClick: handleAdminLogin,\n          children: \"Login as Admin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Header, \"4A5tRijoekp5NDzH4jV7xpMt9zo=\", false, function () {\n  return [useDispatch];\n});\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useState","useDispatch","login","jsxDEV","_jsxDEV","Header","_s","selectedLoginType","setSelectedLoginType","showLoginForm","setShowLoginForm","dispatch","handleLoginButtonClick","handleLoginTypeChange","loginType","window","location","href","userLogin","email","document","getElementById","value","password","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","id","placeholder","handleAdminLogin","_c","$RefreshReg$"],"sources":["C:/Users/USER/AppData/Roaming/Jewelry-Manufacturing-and-Store-Management/customer-app/src/components/Header/index.js"],"sourcesContent":["// index.js\r\nimport React, { useState } from 'react';\r\nimport './style.css';\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from '../../actions';\r\n\r\nconst Header = () => {\r\n  const [selectedLoginType, setSelectedLoginType] = useState(null);\r\n  const [showLoginForm, setShowLoginForm] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleLoginButtonClick = () => {\r\n    setShowLoginForm(true);\r\n  };\r\n\r\n  const handleLoginTypeChange = (loginType) => {\r\n    setSelectedLoginType(loginType);\r\n    setShowLoginForm(false); // Close the login form\r\n    if (loginType === 'admin') {\r\n      // Redirect user to admin page running on port 4000\r\n      window.location.href = 'http://localhost:4000/signin';\r\n    }\r\n  };\r\n\r\n  const userLogin = () => {\r\n    // Retrieve email and password values from the input fields\r\n    const email = document.getElementById('email').value;\r\n    const password = document.getElementById('password').value;\r\n\r\n    // Dispatch login action with email and password\r\n    dispatch(login({ email, password }));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className='headerBar'>\r\n        <div className=\"dropdown\">\r\n          <button className='loginButton' onClick={handleLoginButtonClick}>\r\n            {selectedLoginType ? selectedLoginType === 'customer' ? 'Customer Login' : 'Admin Login' : 'Login'}\r\n          </button>\r\n          {showLoginForm && (\r\n            <div className=\"dropdown-content\">\r\n              <button onClick={() => handleLoginTypeChange('customer')}>Customer Login</button>\r\n              <button onClick={() => handleLoginTypeChange('admin')}>Admin Login</button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      {showLoginForm && (\r\n        <div className='loginFormContainer'>\r\n          <div className='loginForm'>\r\n            <h2>Login</h2>\r\n            <input type='email' id='email' placeholder='email' className='inputField' />\r\n            <input type='password' id='password' placeholder='Password' className='inputField' />\r\n            {selectedLoginType === 'customer' ? (\r\n              <button className='loginSubmitButton' onClick={userLogin}>Login</button>\r\n            ) : (\r\n              <button className='loginSubmitButton' onClick={handleAdminLogin}>Login as Admin</button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,aAAa;AACpB,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,KAAK,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAChE,MAAM,CAACS,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAMW,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9B,MAAMW,sBAAsB,GAAGA,CAAA,KAAM;IACnCF,gBAAgB,CAAC,IAAI,CAAC;EACxB,CAAC;EAED,MAAMG,qBAAqB,GAAIC,SAAS,IAAK;IAC3CN,oBAAoB,CAACM,SAAS,CAAC;IAC/BJ,gBAAgB,CAAC,KAAK,CAAC,CAAC,CAAC;IACzB,IAAII,SAAS,KAAK,OAAO,EAAE;MACzB;MACAC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,8BAA8B;IACvD;EACF,CAAC;EAED,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACtB;IACA,MAAMC,KAAK,GAAGC,QAAQ,CAACC,cAAc,CAAC,OAAO,CAAC,CAACC,KAAK;IACpD,MAAMC,QAAQ,GAAGH,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC,CAACC,KAAK;;IAE1D;IACAX,QAAQ,CAACT,KAAK,CAAC;MAAEiB,KAAK;MAAEI;IAAS,CAAC,CAAC,CAAC;EACtC,CAAC;EAED,oBACEnB,OAAA;IAAAoB,QAAA,gBACEpB,OAAA;MAAKqB,SAAS,EAAC,WAAW;MAAAD,QAAA,eACxBpB,OAAA;QAAKqB,SAAS,EAAC,UAAU;QAAAD,QAAA,gBACvBpB,OAAA;UAAQqB,SAAS,EAAC,aAAa;UAACC,OAAO,EAAEd,sBAAuB;UAAAY,QAAA,EAC7DjB,iBAAiB,GAAGA,iBAAiB,KAAK,UAAU,GAAG,gBAAgB,GAAG,aAAa,GAAG;QAAO;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5F,CAAC,EACRrB,aAAa,iBACZL,OAAA;UAAKqB,SAAS,EAAC,kBAAkB;UAAAD,QAAA,gBAC/BpB,OAAA;YAAQsB,OAAO,EAAEA,CAAA,KAAMb,qBAAqB,CAAC,UAAU,CAAE;YAAAW,QAAA,EAAC;UAAc;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACjF1B,OAAA;YAAQsB,OAAO,EAAEA,CAAA,KAAMb,qBAAqB,CAAC,OAAO,CAAE;YAAAW,QAAA,EAAC;UAAW;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxE,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EACLrB,aAAa,iBACZL,OAAA;MAAKqB,SAAS,EAAC,oBAAoB;MAAAD,QAAA,eACjCpB,OAAA;QAAKqB,SAAS,EAAC,WAAW;QAAAD,QAAA,gBACxBpB,OAAA;UAAAoB,QAAA,EAAI;QAAK;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACd1B,OAAA;UAAO2B,IAAI,EAAC,OAAO;UAACC,EAAE,EAAC,OAAO;UAACC,WAAW,EAAC,OAAO;UAACR,SAAS,EAAC;QAAY;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC5E1B,OAAA;UAAO2B,IAAI,EAAC,UAAU;UAACC,EAAE,EAAC,UAAU;UAACC,WAAW,EAAC,UAAU;UAACR,SAAS,EAAC;QAAY;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EACpFvB,iBAAiB,KAAK,UAAU,gBAC/BH,OAAA;UAAQqB,SAAS,EAAC,mBAAmB;UAACC,OAAO,EAAER,SAAU;UAAAM,QAAA,EAAC;QAAK;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,gBAExE1B,OAAA;UAAQqB,SAAS,EAAC,mBAAmB;UAACC,OAAO,EAAEQ,gBAAiB;UAAAV,QAAA,EAAC;QAAc;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CACxF;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACxB,EAAA,CA1DID,MAAM;EAAA,QAGOJ,WAAW;AAAA;AAAAkC,EAAA,GAHxB9B,MAAM;AA4DZ,eAAeA,MAAM;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}