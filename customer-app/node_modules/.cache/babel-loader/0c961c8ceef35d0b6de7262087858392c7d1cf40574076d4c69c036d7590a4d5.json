{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\AppData\\\\Roaming\\\\Jewelry-Manufacturing-and-Store-Management\\\\customer-app\\\\src\\\\components\\\\Header\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './style.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { login } from '../../actions';\nimport { useNavigate } from 'react-router-dom'; // Import useHistory hook\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Header = () => {\n  _s();\n  const [showLoginForm, setShowLoginForm] = useState(false);\n  const dispatch = useDispatch();\n  const history = useNavigate(); // Initialize useHistory hook\n  const auth = useSelector(state => state.auth);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    setIsLoggedIn(auth.authenticate);\n  }, [auth.authenticate]);\n  const handleLoginButtonClick = () => {\n    setShowLoginForm(true);\n  };\n  const handleAdminLoginButtonClick = () => {\n    // Redirect user to admin page running on port 4000\n    window.location.href = 'http://localhost:4000/signin';\n  };\n  const userLogin = async () => {\n    // Retrieve email and password values from the input fields\n    const email = document.getElementById('email').value;\n    const password = document.getElementById('password').value;\n\n    // Dispatch login action with email and password\n    await dispatch(login({\n      email,\n      password\n    }));\n\n    // Check if the user is authenticated and has the role of 'customer'\n    if (auth.authenticate && auth.user.role === 'customer') {\n      // Redirect to the customer dashboard upon successful login\n      history('/customer/dashboard');\n      {\n        isLoggedIn && window.location.pathname !== '/customer/dashboard' && /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 76\n        }, this);\n      }\n    } else {\n      // Handle other cases, such as displaying an error message\n      console.log('Invalid credentials or user role');\n    }\n    setShowLoginForm(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"headerBar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spacer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"adminLoginButton\",\n        onClick: handleAdminLoginButtonClick,\n        children: \"Admin Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginRight: '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"loginButton\",\n        onClick: handleLoginButtonClick,\n        children: \"Customer Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), showLoginForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loginFormContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loginForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          placeholder: \"email\",\n          className: \"inputField\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          placeholder: \"Password\",\n          className: \"inputField\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"loginSubmitButton\",\n          onClick: userLogin,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(Header, \"46bNDifKVThk8GQmM00ROf0Iz/Q=\", false, function () {\n  return [useDispatch, useNavigate, useSelector];\n});\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","login","useNavigate","jsxDEV","_jsxDEV","Header","_s","showLoginForm","setShowLoginForm","dispatch","history","auth","state","isLoggedIn","setIsLoggedIn","useEffect","authenticate","handleLoginButtonClick","handleAdminLoginButtonClick","window","location","href","userLogin","email","document","getElementById","value","password","user","role","pathname","fileName","_jsxFileName","lineNumber","columnNumber","console","log","children","className","onClick","style","marginRight","type","id","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/USER/AppData/Roaming/Jewelry-Manufacturing-and-Store-Management/customer-app/src/components/Header/index.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './style.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { login } from '../../actions';\r\nimport { useNavigate } from 'react-router-dom'; // Import useHistory hook\r\n\r\nconst Header = () => {\r\n  const [showLoginForm, setShowLoginForm] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const history = useNavigate(); // Initialize useHistory hook\r\n  const auth = useSelector((state) => state.auth);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  \r\n  useEffect(() => {\r\n    setIsLoggedIn(auth.authenticate);\r\n  }, [auth.authenticate]);\r\n  const handleLoginButtonClick = () => {\r\n    setShowLoginForm(true);\r\n  };\r\n\r\n  const handleAdminLoginButtonClick = () => {\r\n    // Redirect user to admin page running on port 4000\r\n    window.location.href = 'http://localhost:4000/signin';\r\n  };\r\n\r\n  const userLogin = async () => {\r\n    // Retrieve email and password values from the input fields\r\n    const email = document.getElementById('email').value;\r\n    const password = document.getElementById('password').value;\r\n\r\n    // Dispatch login action with email and password\r\n    await dispatch(login({ email, password }));\r\n\r\n    // Check if the user is authenticated and has the role of 'customer'\r\n    if (auth.authenticate && auth.user.role === 'customer') {\r\n      // Redirect to the customer dashboard upon successful login\r\n      history('/customer/dashboard');\r\n      {isLoggedIn && window.location.pathname !== '/customer/dashboard' && <Header />}\r\n    } else {\r\n      // Handle other cases, such as displaying an error message\r\n      console.log('Invalid credentials or user role');\r\n    }\r\n\r\n    setShowLoginForm(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className='headerBar'>\r\n        <div className='spacer' /> {/* Spacer to push buttons to the right */}\r\n        <button className='adminLoginButton' onClick={handleAdminLoginButtonClick}>\r\n          Admin Login\r\n        </button>\r\n        <div style={{ marginRight: '10px' }} /> {/* Add space between buttons */}\r\n        <button className='loginButton' onClick={handleLoginButtonClick}>\r\n          Customer Login\r\n        </button>\r\n      </div>\r\n      {showLoginForm && (\r\n        <div className='loginFormContainer'>\r\n          <div className='loginForm'>\r\n            <h2>Login</h2>\r\n            <input type='email' id='email' placeholder='email' className='inputField' />\r\n            <input type='password' id='password' placeholder='Password' className='inputField' />\r\n            <button className='loginSubmitButton' onClick={userLogin}>Login</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}