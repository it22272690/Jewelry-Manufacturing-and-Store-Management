{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\AppData\\\\Roaming\\\\Jewelry-Manufacturing-and-Store-Management\\\\customer-app\\\\src\\\\containers\\\\HomePage\\\\CustomerDashboard\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './style.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomerDashboard = () => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [updatedUser, setUpdatedUser] = useState(null);\n  const [isEditing, setIsEditing] = useState(false);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const customerId = localStorage.getItem('id');\n\n    // Check if user is authenticated (customerId exists in localStorage)\n    if (token && customerId) {\n      fetchCustomerDetails(customerId);\n    } else {\n      // Handle case where user is not authenticated (redirect to login page or show error message)\n      console.error('User is not authenticated');\n    }\n  }, []); // Only runs once on component mount\n\n  const fetchCustomerDetails = async customerId => {\n    try {\n      const response = await axios.get(`http://localhost:5000/users/${customerId}`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      setUser(response.data.user);\n      setUpdatedUser(response.data.user); // Initialize updatedUser with fetched user data\n    } catch (error) {\n      console.error('Error fetching customer details:', error);\n    }\n  };\n  const handleUpdate = async () => {\n    try {\n      const customerId = localStorage.getItem('id'); // Get the customer ID from localStorage\n      await axios.put(`http://localhost:5000/users/${customerId}`, updatedUser);\n      // Refresh customer details after update\n      await fetchCustomerDetails(customerId);\n    } catch (error) {\n      console.error('Error updating customer details:', error);\n    }\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    // Update the corresponding field in updatedUser state\n    setUpdatedUser({\n      ...updatedUser,\n      [name]: value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(CustomerDashboard, \"ar9fzcOnCJaNMs/T+DOZ5LJR6Ys=\");\n_c = CustomerDashboard;\nexport default CustomerDashboard;\nvar _c;\n$RefreshReg$(_c, \"CustomerDashboard\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","CustomerDashboard","_s","user","setUser","updatedUser","setUpdatedUser","isEditing","setIsEditing","token","localStorage","getItem","customerId","fetchCustomerDetails","console","error","response","get","headers","Authorization","data","handleUpdate","put","handleChange","e","name","value","target","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/USER/AppData/Roaming/Jewelry-Manufacturing-and-Store-Management/customer-app/src/containers/HomePage/CustomerDashboard/index.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './style.css';\r\nimport axios from 'axios';\r\n\r\nconst CustomerDashboard = () => {\r\n  const [user, setUser] = useState(null);\r\n  const [updatedUser, setUpdatedUser] = useState(null);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    const customerId = localStorage.getItem('id');\r\n\r\n    // Check if user is authenticated (customerId exists in localStorage)\r\n    if (token && customerId) {\r\n      fetchCustomerDetails(customerId);\r\n    } else {\r\n      // Handle case where user is not authenticated (redirect to login page or show error message)\r\n      console.error('User is not authenticated');\r\n    }\r\n  }, []); // Only runs once on component mount\r\n\r\n  const fetchCustomerDetails = async (customerId) => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:5000/users/${customerId}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n      });\r\n      setUser(response.data.user);\r\n      setUpdatedUser(response.data.user); // Initialize updatedUser with fetched user data\r\n    } catch (error) {\r\n      console.error('Error fetching customer details:', error);\r\n    }\r\n  };\r\n\r\n  const handleUpdate = async () => {\r\n    try {\r\n      const customerId = localStorage.getItem('id'); // Get the customer ID from localStorage\r\n      await axios.put(`http://localhost:5000/users/${customerId}`, updatedUser);\r\n      // Refresh customer details after update\r\n      await fetchCustomerDetails(customerId);\r\n    } catch (error) {\r\n      console.error('Error updating customer details:', error);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    // Update the corresponding field in updatedUser state\r\n    setUpdatedUser({ ...updatedUser, [name]: value });\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      {/* Sidebar and other UI components */}\r\n      {/* Customer details rendering */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomerDashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,aAAa;AACpB,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAEjDD,SAAS,CAAC,MAAM;IACd,MAAMa,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,UAAU,GAAGF,YAAY,CAACC,OAAO,CAAC,IAAI,CAAC;;IAE7C;IACA,IAAIF,KAAK,IAAIG,UAAU,EAAE;MACvBC,oBAAoB,CAACD,UAAU,CAAC;IAClC,CAAC,MAAM;MACL;MACAE,OAAO,CAACC,KAAK,CAAC,2BAA2B,CAAC;IAC5C;EACF,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,MAAMF,oBAAoB,GAAG,MAAOD,UAAU,IAAK;IACjD,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,GAAG,CAAE,+BAA8BL,UAAW,EAAC,EAAE;QAC5EM,OAAO,EAAE;UACPC,aAAa,EAAG,UAAST,YAAY,CAACC,OAAO,CAAC,OAAO,CAAE;QACzD;MACF,CAAC,CAAC;MACFP,OAAO,CAACY,QAAQ,CAACI,IAAI,CAACjB,IAAI,CAAC;MAC3BG,cAAc,CAACU,QAAQ,CAACI,IAAI,CAACjB,IAAI,CAAC,CAAC,CAAC;IACtC,CAAC,CAAC,OAAOY,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IAC1D;EACF,CAAC;EAED,MAAMM,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAMT,UAAU,GAAGF,YAAY,CAACC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;MAC/C,MAAMb,KAAK,CAACwB,GAAG,CAAE,+BAA8BV,UAAW,EAAC,EAAEP,WAAW,CAAC;MACzE;MACA,MAAMQ,oBAAoB,CAACD,UAAU,CAAC;IACxC,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IAC1D;EACF,CAAC;EAED,MAAMQ,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChC;IACArB,cAAc,CAAC;MAAE,GAAGD,WAAW;MAAE,CAACoB,IAAI,GAAGC;IAAM,CAAC,CAAC;EACnD,CAAC;EAED,oBACE1B,OAAA;IAAK4B,SAAS,EAAC;EAAW;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGrB,CAAC;AAEV,CAAC;AAAC9B,EAAA,CAvDID,iBAAiB;AAAAgC,EAAA,GAAjBhC,iBAAiB;AAyDvB,eAAeA,iBAAiB;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}