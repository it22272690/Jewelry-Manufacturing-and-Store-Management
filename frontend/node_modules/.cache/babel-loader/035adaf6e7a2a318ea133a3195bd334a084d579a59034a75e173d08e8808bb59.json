{"ast":null,"code":"import { authConstants } from \"./constants\";\nimport axios from \"axios\";\nexport const login = user => {\n  return async dispatch => {\n    dispatch({\n      type: authConstants.LOGIN_REQUEST\n    });\n    try {\n      const res = await axios.post(\"http://localhost:5000/users/admin/signin\", user);\n      if (res.status === 200) {\n        const {\n          token,\n          user\n        } = res.data;\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"user\", JSON.stringify(user));\n        dispatch({\n          type: authConstants.LOGIN_SUCCESS,\n          payload: {\n            token,\n            user\n          }\n        });\n      } else {\n        dispatch({\n          type: authConstants.LOGIN_FAILURE,\n          payload: {\n            error: res.data.error\n          }\n        });\n      }\n    } catch (error) {\n      console.error(\"Error logging in:\", error);\n      dispatch({\n        type: authConstants.LOGIN_FAILURE,\n        payload: {\n          error: \"Error logging in\"\n        }\n      });\n    }\n  };\n};\nexport const isUserLoggedIn = () => {\n  return async dispatch => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      const user = JSON.parse(localStorage.getItem(\"user\"));\n      dispatch({\n        type: authConstants.LOGIN_SUCCESS,\n        payload: {\n          token,\n          user\n        }\n      });\n    } else {\n      dispatch({\n        type: authConstants.LOGIN_FAILURE,\n        payload: {\n          error: \"Failed to login\"\n        }\n      });\n    }\n  };\n};\nexport const signout = () => {\n  return async dispatch => {\n    dispatch({\n      type: authConstants.LOGOUT_REQUEST\n    });\n    try {\n      const token = localStorage.getItem(\"token\");\n      const config = {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      };\n      const res = await axios.post(\"http://localhost:5000/users/admin/signout\", {}, config);\n      if (res.status === 200) {\n        localStorage.clear();\n        dispatch({\n          type: authConstants.LOGOUT_SUCCESS\n        });\n      } else {\n        dispatch({\n          type: authConstants.LOGOUT_FAILURE,\n          payload: {\n            error: res.data.error\n          }\n        });\n      }\n    } catch (error) {\n      console.error(\"Error signing out:\", error);\n      dispatch({\n        type: authConstants.LOGOUT_FAILURE,\n        payload: {\n          error: \"Error signing out\"\n        }\n      });\n    }\n  };\n};","map":{"version":3,"names":["authConstants","axios","login","user","dispatch","type","LOGIN_REQUEST","res","post","status","token","data","localStorage","setItem","JSON","stringify","LOGIN_SUCCESS","payload","LOGIN_FAILURE","error","console","isUserLoggedIn","getItem","parse","signout","LOGOUT_REQUEST","config","headers","Authorization","clear","LOGOUT_SUCCESS","LOGOUT_FAILURE"],"sources":["C:/Users/USER/AppData/Roaming/Jewelry-Manufacturing-and-Store-Management/frontend/src/actions/user.actions.js"],"sourcesContent":["import { authConstants } from \"./constants\";\r\nimport axios from \"axios\";\r\n\r\nexport const login = (user) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: authConstants.LOGIN_REQUEST });\r\n\r\n    try {\r\n      const res = await axios.post(\"http://localhost:5000/users/admin/signin\", user);\r\n\r\n      if (res.status === 200) {\r\n        const { token, user } = res.data;\r\n        localStorage.setItem(\"token\", token);\r\n        localStorage.setItem(\"user\", JSON.stringify(user));\r\n        dispatch({\r\n          type: authConstants.LOGIN_SUCCESS,\r\n          payload: { token, user },\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: authConstants.LOGIN_FAILURE,\r\n          payload: { error: res.data.error },\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error logging in:\", error);\r\n      dispatch({\r\n        type: authConstants.LOGIN_FAILURE,\r\n        payload: { error: \"Error logging in\" },\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const isUserLoggedIn = () => {\r\n  return async (dispatch) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      const user = JSON.parse(localStorage.getItem(\"user\"));\r\n      dispatch({\r\n        type: authConstants.LOGIN_SUCCESS,\r\n        payload: { token, user },\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: authConstants.LOGIN_FAILURE,\r\n        payload: { error: \"Failed to login\" },\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const signout = () => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: authConstants.LOGOUT_REQUEST });\r\n\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      };\r\n\r\n      const res = await axios.post(\"http://localhost:5000/users/admin/signout\", {}, config);\r\n\r\n      if (res.status === 200) {\r\n        localStorage.clear();\r\n        dispatch({ type: authConstants.LOGOUT_SUCCESS });\r\n      } else {\r\n        dispatch({\r\n          type: authConstants.LOGOUT_FAILURE,\r\n          payload: { error: res.data.error },\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error signing out:\", error);\r\n      dispatch({\r\n        type: authConstants.LOGOUT_FAILURE,\r\n        payload: { error: \"Error signing out\" },\r\n      });\r\n    }\r\n  };\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}